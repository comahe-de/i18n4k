package x

import de.comahe.i18n4k.Locale
import de.comahe.i18n4k.messages.MessageBundle
import de.comahe.i18n4k.messages.MessageBundleLocalizedString
import de.comahe.i18n4k.messages.providers.MessagesProvider
import kotlin.Array
import kotlin.Int
import kotlin.String
import kotlin.jvm.JvmStatic

/**
 * Massage constants for bundle 'Bobo'. Generated by i18n4k.
 */
public object Bobo : MessageBundle("Bobo", "x") {
  /**
   * abc
   */
  @JvmStatic
  public val a_b_c: MessageBundleLocalizedString = getLocalizedString0("a.b.c", 0)

  /**
   * abd
   */
  @JvmStatic
  public val a_b_d: MessageBundleLocalizedString = getLocalizedString0("a.b.d", 1)

  init {
    registerTranslation(Bobo_en)
    registerTranslation(Bobo_de)
  }
  init {
    registerMessageBundleEntries(a_b_c, a_b_d)
  }
}

/**
 * Translation of message bundle 'Bobo' for locale 'en'. Generated by i18n4k.
 */
private object Bobo_en : MessagesProvider {
  @JvmStatic
  private val _data: Array<String?> = arrayOf(
      "abc",
      "abd")

  public override val locale: Locale = Locale("en")

  public override val size: Int
    get() = _data.size

  public override fun `get`(index: Int): String? = _data[index]
}

/**
 * Translation of message bundle 'Bobo' for locale 'de'. Generated by i18n4k.
 */
private object Bobo_de : MessagesProvider {
  @JvmStatic
  private val _data: Array<String?> = arrayOf(
      "ABC",
      "ABD")

  public override val locale: Locale = Locale("de")

  public override val size: Int
    get() = _data.size

  public override fun `get`(index: Int): String? = _data[index]
}
